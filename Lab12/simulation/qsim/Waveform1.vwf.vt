// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "05/23/2024 16:52:30"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    Lab12_2
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Lab12_2_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLOCK_50;
reg [0:0] KEY;
reg PS2_KBCLK;
reg PS2_KBDAT;
// wires                                               
wire [3:0] VGA_B;
wire [3:0] VGA_G;
wire VGA_HS;
wire [3:0] VGA_R;
wire VGA_VS;

// assign statements (if any)                          
Lab12_2 i1 (
// port map - connection between master ports and signals/registers   
	.CLOCK_50(CLOCK_50),
	.KEY(KEY),
	.PS2_KBCLK(PS2_KBCLK),
	.PS2_KBDAT(PS2_KBDAT),
	.VGA_B(VGA_B),
	.VGA_G(VGA_G),
	.VGA_HS(VGA_HS),
	.VGA_R(VGA_R),
	.VGA_VS(VGA_VS)
);
initial 
begin 
#1000000 $finish;
end 

// CLOCK_50
always
begin
	CLOCK_50 = 1'b0;
	CLOCK_50 = #50 1'b1;
	#50;
end 

// KEY
initial
begin
	KEY = 1'b0;
end 

// KEY[0]
initial
begin
	KEY[0] = 1'b0;
	KEY[0] = #20000 1'b1;
end 

// PS2_KBCLK
initial
begin
	PS2_KBCLK = 1'b0;
end 

// PS2_KBDAT
initial
begin
	PS2_KBDAT = 1'b0;
end 
initial 
begin 
#1000000 $finish;
end 
endmodule

