library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
entity Lab9_1 is
port 
	(		
		KEY:in std_logic_vector(1 downto 1);
		SW:in std_logic_vector(0 downto 0)
		LEDG:out std_logic_vector(9 downto 5);

end Lab9_1;

architecture behavior of LAb9_1 is
	TYPE State_TYPE IS (S0, S1, S2, S3, S4) ;
	ATTRIBUTE ENUM_ENCODING 			: STRING ;
	ATTRIBUTE ENUM_ENCODING OF State_type 	: TYPE IS "000 001 010 011 100" ;
	signal CLK,reset: std_logic;
	signal op:std_logic;
	signal l_state,N_state:State_TYPE;
begin
	LEDF(9) <= op;
	LEDG(7 downto 5) <=l_state;
	RESET <= KEY(1);
	clock <=KEY(2);
	
	process(KEY,l_state)
	begin
		CASE l_state IS:
			WHEN S0=>
				IF KEY = "0" THEN N_state <= S0 ;
				ELSE N_state <= S1 ;
				END IF ;
			WHEN S1=>
				IF KEY = "0" THEN N_state <= S2 ;
				ELSE N_state <= S1 ;
				END IF ;
			WHEN S2=>
				IF KEY = "0" THEN N_state <= S0 ;
				ELSE N_state <= S3 ;
				END IF ;
			WHEN S3=>
				IF KEY = "0" THEN N_state <= S2 ;
				ELSE N_state <= S4 ;
				END IF ;
			WHEN S4=>
				IF KEY = "0" THEN N_state <= S2 ;
				ELSE N_state <= S1 ;
				END IF ;
	end process; 
	
	process(clock,reset)
	begin
		IF reset = '0' THEN
			l_state <= S0 ;
		ELSIF (Clock'EVENT AND Clock = '1') THEN
			l_state <= N_state ;
		END IF ;
	end process; 
end behavior;
